#!/bin/bash  

#
# Author : peter.ducai@gmail.com 
# Homepage : 
# License : BSD http://en.wikipedia.org/wiki/BSD_license
# Copyright 2014, peter ducai
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met: 
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution. 
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Purpose : Yocto installer
# Usage : run with --help paramater
#

BUILD="N"
DEPLOYMENT_FOLDER="${HOME}/YoctoDeployment"
MACHINES=('qemux86')
IMAGES=('core-image-sato')
DISTROS=('poky')



#####################
# Usage   #
###########
print_usage() {
    echo -e "USAGE:"
    echo -e " --deployment-folder=\"path\""
    echo -e " --build-yocto (to build it)"
    echo -e " --distro=\"distro\""
    echo -e " --machine=\"machine\""
    echo -e " --image=\"image\""
}


#########################################
# download and install/build Yocto      #
#########################################
install_yocto() {

    wget -O ${DEPLOYMENT_FOLDER}/poky-dora-10.0.1.tar.bz2 http://downloads.yoctoproject.org/releases/yocto/yocto-1.5.1/poky-dora-10.0.1.tar.bz2
    cd ${DEPLOYMENT_FOLDER}
    tar -vxjf poky-dora-10.0.1.tar.bz2
    mv poky-dora-10.0.1 poky

    echo -e "Found following"
    echo -e "DISTROS: $(ls poky/meta*/conf/distro/*.conf| grep 'conf/distro/' | cut -d '/' -f 5 | cut -d '.' -f 1)"
    echo -e "MACHINES: $(ls poky/meta*/conf/machine/*.conf| cut -d '/' -f 5 | cut -d '.' -f 1)"
    echo -e "IMAGES: $(ls poky/meta*/recipe*/images/*.bb |cut -d '/' -f 5 | cut -d '.' -f 1)"   
    echo -e "BUT DEFAULT VALUES CURRENTLY ARE:"
    echo -e "Found following"
    echo -e "DISTROS: ${DISTROS[@]}"
    echo -e "MACHINES: ${MACHINES[@]}"
    echo -e "IMAGES: ${IMAGES[@]}"  
    
    echo -e "\n\nRun $0 with --build-yocto"
    
}

build_yocto() {
    cd ${DEPLOYMENT_FOLDER}
    source poky/oe-init-build-env
    echo -e "ALTERING conf/local.conf... in $(pwd)"
    cd ${DEPLOYMENT_FOLDER}/build
    mv conf/local.conf conf/local.conf.original
    
#    sed -i "s/MACHINE ??= \"qemux86\"/MACHINE ??= \"${MACHINES[@]}\"/g" conf/local.conf
#    sed -i "s/#BB_NUMBER_THREADS ?= \"4\"/BB_NUMBER_THREADS ?= \"$(cat /proc/cpuinfo |grep processor|wc -l)\"/g" conf/local.conf
#    sed -i "s/#PARALLEL_MAKE ?= \"4\"/PARALLEL_MAKE ?= \"$(cat /proc/cpuinfo |grep processor|wc -l)\"/g" conf/local.conf
    
    echo -e "# Generated by YoctoTools" > ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "BB_NUMBER_THREADS ?= \"$(cat /proc/cpuinfo |grep processor|wc -l)\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "PARALLEL_MAKE ?= \"-j $(cat /proc/cpuinfo |grep processor|wc -l)\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "MACHINE ??= \"${MACHINES[@]}\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "DISTRO ?= \"poky\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "PACKAGE_CLASSES ?= \"package_rpm\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "EXTRA_IMAGE_FEATURES = \"debug-tweaks\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "USER_CLASSES ?= \"buildstats image-mklibs image-prelink\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "PATCHRESOLVE = \"noop\"" >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "BB_DISKMON_DIRS = \"\ " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "STOPTASKS,${TMPDIR},1G,100K \ " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "STOPTASKS,${DL_DIR},1G,100K \ " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "STOPTASKS,${SSTATE_DIR},1G,100K \ " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "ABORT,${TMPDIR},100M,1K \ " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "ABORT,${DL_DIR},100M,1K \ " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "ABORT,${SSTATE_DIR},100M,1K\" " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    echo -e "CONF_VERSION = \"1\" " >> ${DEPLOYMENT_FOLDER}/build/conf/local.conf
    
    bitbake -c fetchall ${IMAGES[@]}
    bitbake ${IMAGES[@]}
    echo -e "type runqemu ${MACHINES[@]} to run emulator"
}


print_banner() {
    echo -e "Yocto 1.5.1 Installer"
}


interactive_questionare() {
    echo -e "please specify following values:"
    echo -e "deployment folder [${DEPLOYMENT_FOLDER}]:"
    read DF
    if [[ ! -z ${DF} ]];then
        DEPLOYMENT_FOLDER="${DF}" 
        yocto_project_manager.sh --add_deployment="${DEPLOYMENT_FOLDER}"
        yocto_project_manager.sh --set-default-deployment="${DEPLOYMENT_FOLDER}"
    fi

    echo -e "do you want to also build Yocto? build can take up to 4 hours..."
    read BU
    if [[ ${BU} == "Y" ]];then
        BUILD="Y" 
    fi
}

#########################################################################################
#                                                                                       #
# MAIN FUNCTION                                                                         #
#########################################################################################

print_banner

for i in "$@"
do
case $i in
    --help) print_usage
        ;;
    --deployment-folder=*) DEPLOYMENT_FOLDER="${i#*=}" && yocto_project_manager.sh --add_deployment="${i#*=}"
        ;;
    --build-yocto) BUILD="Y" 
        ;;
    --distros=*) DISTROS="${i#*=}"
        ;;
    --machines=*) MACHINES="${i#*=}"
        ;;
    --images=*) IMAGES="${i#*=}"
        ;;
    --interactive) interactive_questionare
        ;;
    *) echo "invalid option!!!" 
        print_usage
        ;;
esac
done

install_yocto
if [[ "${BUILD}" == "Y" ]];then
    build_yocto
fi

exit $?
